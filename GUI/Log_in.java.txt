package GUI;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Random;

import javax.swing.*;

public class Main extends JFrame implements ActionListener {

    JFrame frame = new JFrame("Log In");
    JButton button = new JButton("Log In");
    JButton playButton = new JButton("Start");
    JLabel Userlb = new JLabel("Username", SwingConstants.CENTER);
    JLabel Passwordlb = new JLabel("Password", SwingConstants.CENTER);
    JTextField tfUser = new JTextField(10);
    JPasswordField tfPassword = new JPasswordField(10);
    Font mainfont = new Font("Segoe print", Font.BOLD, 25);
    HashMap<String, String> accounts = readFile();

    public Main() {
        
        setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);

        gbc.gridx = 0;
        gbc.gridy = 0;
        playButton.setFont(new Font("Tahoma", Font.BOLD, 30));
        playButton.setBackground(Color.red);
        playButton.setForeground(Color.white);
        add(playButton, gbc);

        gbc.gridy = 1;
        Userlb.setFont(mainfont);
        Userlb.setForeground(Color.white);
        add(Userlb, gbc);

        gbc.gridy = 2;
        add(tfUser, gbc);

        gbc.gridy = 3;
        Passwordlb.setFont(mainfont);
        Passwordlb.setForeground(Color.white);
        add(Passwordlb, gbc);

        gbc.gridy = 4;
        add(tfPassword, gbc);

        gbc.gridy = 5;
        button.setBackground(Color.blue);
        button.setForeground(Color.white);
        add(button, gbc);

        Userlb.setVisible(false);
        tfUser.setVisible(false);
        Passwordlb.setVisible(false);
        tfPassword.setVisible(false);
        button.setVisible(false);

        playButton.addActionListener(this);
        button.addActionListener(this);

        setIconImage(new ImageIcon("image.png").getImage());
        getContentPane().setBackground(Color.black);
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == playButton) {
            playButton.setVisible(false);
            Userlb.setVisible(true);
            tfUser.setVisible(true);
            Passwordlb.setVisible(true);
            tfPassword.setVisible(true);
            button.setVisible(true);
            frame.getContentPane().setBackground(Color.darkGray);
        } else if (e.getSource() == button) {
            String username = tfUser.getText();
            String password = new String(tfPassword.getPassword());

            if (accounts.containsKey(username)) {
                if (accounts.get(username).equals(password)) {
                    JOptionPane.showMessageDialog(frame, "Login successful!");
                    frame.dispose();
                    new MathQuizGame2();
                } else {
                    JOptionPane.showMessageDialog(frame, "Incorrect Password", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(frame, "Invalid username or password.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public static void main(String[] args) {
        new Main();
    }

    public HashMap<String, String> readFile() {
        HashMap<String, String> accounts = new HashMap<>();
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Javacodes\\users.txt"))) {
            String user;
            while ((user = br.readLine()) != null) {
                String pass = br.readLine();
                if (pass != null) {
                    accounts.put(user, pass);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return accounts;
    }
}